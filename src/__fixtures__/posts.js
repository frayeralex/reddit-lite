export default [
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext:
        "*We alternate between* **Who's Hiring** *(on the 1st of the month,* [*most recent one here*](https://www.reddit.com/r/reactjs/comments/c843d5/whos_hiring_july_2019/)*) and* **Who's Available** *(on the 15th,* [*most recent one here*](https://www.reddit.com/r/reactjs/comments/cdkvtq/whos_available_july_2019/)*)*\n\nWelcome to **the biggest React job board in the world**! This is like Hacker News' **Who's Hiring** but just for React. Top Level comments must be **Job Opportunities**.\n\n‚ö†Ô∏è NEW: WE ARE REQUESTING EVERYBODY FOLLOW [THE HN Who's Hiring FORMAT](https://news.ycombinator.com/item?id=17205865)\n\n**Company inc. | Job Title | City/State Location | Full-time/Part-Time | On-site/Remote | (Optional) Salary range | Website jobs page, other hard requirements etc.**\n\nexamples: \n\n- **Thorn | San Francisco or Remote (US based) | Full-time Contract | $100k - $150k | Software Engineer | https://www.wearethorn.org/**\n- **PolicyStat | Full-Stack Python+Django Software Engineer | Indianapolis, Vancouver, or REMOTE | Full Time | +$80k**\n\nPlease include as much information as possible. **If you are remote-friendly, or open to sponsoring work visas to your country, say so! These are the top 2 questions!**\n\nIf you are looking for jobs, send a PM to the poster or post in our [Who's Available thread](https://www.reddit.com/r/reactjs/comments/cdkvtq/whos_available_july_2019/)!\n\nRecruiters ok!\n\n*Edit: Obligatory OMG THANKS FOR THE GOLD",
      author_fullname: 't2_kcqtz',
      saved: false,
      mod_reason_title: null,
      gilded: 1,
      clicked: false,
      title: 'Who‚Äôs Hiring? [August 2019]',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: 'link-flair-careers',
      downs: 0,
      thumbnail_height: null,
      hide_score: false,
      name: 't3_ckow24',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 106,
      total_awards_received: 1,
      media_embed: {},
      thumbnail_width: null,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: 'Careers',
      can_mod_post: false,
      score: 106,
      approved_by: null,
      thumbnail: 'self',
      edited: 1564769366,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {
        gid_2: 1,
      },
      content_categories: null,
      is_self: true,
      mod_note: null,
      created: 1564697505,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'self.reactjs',
      allow_live_comments: false,
      selftext_html:
        '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;em&gt;We alternate between&lt;/em&gt; &lt;strong&gt;Who&amp;#39;s Hiring&lt;/strong&gt; &lt;em&gt;(on the 1st of the month,&lt;/em&gt; &lt;a href="https://www.reddit.com/r/reactjs/comments/c843d5/whos_hiring_july_2019/"&gt;&lt;em&gt;most recent one here&lt;/em&gt;&lt;/a&gt;&lt;em&gt;) and&lt;/em&gt; &lt;strong&gt;Who&amp;#39;s Available&lt;/strong&gt; &lt;em&gt;(on the 15th,&lt;/em&gt; &lt;a href="https://www.reddit.com/r/reactjs/comments/cdkvtq/whos_available_july_2019/"&gt;&lt;em&gt;most recent one here&lt;/em&gt;&lt;/a&gt;&lt;em&gt;)&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;Welcome to &lt;strong&gt;the biggest React job board in the world&lt;/strong&gt;! This is like Hacker News&amp;#39; &lt;strong&gt;Who&amp;#39;s Hiring&lt;/strong&gt; but just for React. Top Level comments must be &lt;strong&gt;Job Opportunities&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;‚ö†Ô∏è NEW: WE ARE REQUESTING EVERYBODY FOLLOW &lt;a href="https://news.ycombinator.com/item?id=17205865"&gt;THE HN Who&amp;#39;s Hiring FORMAT&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Company inc. | Job Title | City/State Location | Full-time/Part-Time | On-site/Remote | (Optional) Salary range | Website jobs page, other hard requirements etc.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;examples: &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;Thorn | San Francisco or Remote (US based) | Full-time Contract | $100k - $150k | Software Engineer | &lt;a href="https://www.wearethorn.org/"&gt;https://www.wearethorn.org/&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;PolicyStat | Full-Stack Python+Django Software Engineer | Indianapolis, Vancouver, or REMOTE | Full Time | +$80k&lt;/strong&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Please include as much information as possible. &lt;strong&gt;If you are remote-friendly, or open to sponsoring work visas to your country, say so! These are the top 2 questions!&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;If you are looking for jobs, send a PM to the poster or post in our &lt;a href="https://www.reddit.com/r/reactjs/comments/cdkvtq/whos_available_july_2019/"&gt;Who&amp;#39;s Available thread&lt;/a&gt;!&lt;/p&gt;\n\n&lt;p&gt;Recruiters ok!&lt;/p&gt;\n\n&lt;p&gt;*Edit: Obligatory OMG THANKS FOR THE GOLD&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
      likes: null,
      suggested_sort: 'new',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: false,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      all_awardings: [
        {
          is_enabled: true,
          count: 1,
          subreddit_id: null,
          description:
            'Gives the author a week of Reddit Premium, %%{coin_symbol}100 Coins to do with as they please, and shows a Gold Award on the post.',
          coin_reward: 100,
          icon_width: 512,
          icon_url:
            'https://www.redditstatic.com/gold/awards/icon/gold_512.png',
          days_of_premium: 7,
          id: 'gid_2',
          icon_height: 512,
          resized_icons: [
            {
              url: 'https://www.redditstatic.com/gold/awards/icon/gold_16.png',
              width: 16,
              height: 16,
            },
            {
              url: 'https://www.redditstatic.com/gold/awards/icon/gold_32.png',
              width: 32,
              height: 32,
            },
            {
              url: 'https://www.redditstatic.com/gold/awards/icon/gold_48.png',
              width: 48,
              height: 48,
            },
            {
              url: 'https://www.redditstatic.com/gold/awards/icon/gold_64.png',
              width: 64,
              height: 64,
            },
            {
              url: 'https://www.redditstatic.com/gold/awards/icon/gold_128.png',
              width: 128,
              height: 128,
            },
          ],
          days_of_drip_extension: 0,
          award_type: 'global',
          coin_price: 500,
          subreddit_coin_reward: 0,
          name: 'Gold',
        },
      ],
      media_only: false,
      link_flair_template_id: '8230d474-857b-11e8-8125-0ea00c291202',
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: 'moderator',
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '#94e044',
      id: 'ckow24',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'swyx',
      num_crossposts: 1,
      num_comments: 46,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: true,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink: '/r/reactjs/comments/ckow24/whos_hiring_august_2019/',
      parent_whitelist_status: 'all_ads',
      stickied: true,
      url:
        'https://www.reddit.com/r/reactjs/comments/ckow24/whos_hiring_august_2019/',
      subreddit_subscribers: 129260,
      created_utc: 1564668705,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext:
        "Previous two threads - [July 2019](https://www.reddit.com/r/reactjs/comments/c88pzm/beginners_thread_easy_questions_july_2019/) and [June 2019](https://www.reddit.com/r/reactjs/comments/bvxng8/beginners_thread_easy_questions_june_2019/).\n\nGot questions about React or anything else in its ecosystem? Stuck making progress on your app? Ask away! We‚Äôre a friendly bunch. \n\nNo question is too simple. ü§î\n\n---------------------------------------------\n\nüÜò **Want Help with your Code?** üÜò\n\n* **Improve your chances** by putting a minimal example to either [JSFiddle](https://jsfiddle.net/Luktwrdm/) or [Code Sandbox](https://codesandbox.io/s/new). Describe what you want it to do, and things you've tried. Don't just post big blocks of code!\n\n* **Pay it forward!** Answer questions even if there is already an answer - multiple perspectives can be very helpful to beginners. Also there's no quicker way to learn than [being wrong on the Internet](https://xkcd.com/386/). \n\n**Have a question regarding code / repository organization?**\n\nIt's most likely answered within this [tweet](https://twitter.com/dan_abramov/status/1027245759232651270?lang=en).\n\n---------------------------------------------------\n\n**New to React?**\n\n**Check out the sub's sidebar!**\n\nüÜì Here are great, **free** resources! üÜì\n\n* [Create React App](https://facebook.github.io/create-react-app/)\n* [Read the **official** Getting Started page](https://reactjs.org/docs/getting-started.html) on the docs.\n* [/u/acemarke](https://www.reddit.com/u/acemarke)'s [suggested resources for learning React](http://blog.isquaredsoftware.com/2017/12/blogged-answers-learn-react/)\n* [Kent Dodd's Egghead.io course](http://kcd.im/beginner-react)\n* [Tyler McGinnis' 2018 Guide](https://medium.freecodecamp.org/a-comprehensive-guide-to-react-js-in-2018-ba8bb6975597)\n* [Codecademy's React courses](https://www.codecademy.com/catalog/language/javascript)\n* [Scrimba's React Course](https://scrimba.com/g/glearnreact)\n* [Robin Wieruch's Road to React](https://roadtoreact.com)\n\n-----\n\nAny ideas/suggestions to improve this thread - feel free to comment here!\n\n----\n_Finally, an ongoing thank you to all who post questions and those who answer them. We're a growing community and helping each other only strengthens it!_",
      author_fullname: 't2_2aun3ozb',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title: "Beginner's Thread / Easy Questions (August 2019)",
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: null,
      downs: 0,
      thumbnail_height: null,
      hide_score: false,
      name: 't3_ckpa1i',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 8,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: null,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: null,
      can_mod_post: false,
      score: 8,
      approved_by: null,
      thumbnail: 'self',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      content_categories: null,
      is_self: true,
      mod_note: null,
      created: 1564699400,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'self.reactjs',
      allow_live_comments: false,
      selftext_html:
        '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Previous two threads - &lt;a href="https://www.reddit.com/r/reactjs/comments/c88pzm/beginners_thread_easy_questions_july_2019/"&gt;July 2019&lt;/a&gt; and &lt;a href="https://www.reddit.com/r/reactjs/comments/bvxng8/beginners_thread_easy_questions_june_2019/"&gt;June 2019&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Got questions about React or anything else in its ecosystem? Stuck making progress on your app? Ask away! We‚Äôre a friendly bunch. &lt;/p&gt;\n\n&lt;p&gt;No question is too simple. ü§î&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;üÜò &lt;strong&gt;Want Help with your Code?&lt;/strong&gt; üÜò&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Improve your chances&lt;/strong&gt; by putting a minimal example to either &lt;a href="https://jsfiddle.net/Luktwrdm/"&gt;JSFiddle&lt;/a&gt; or &lt;a href="https://codesandbox.io/s/new"&gt;Code Sandbox&lt;/a&gt;. Describe what you want it to do, and things you&amp;#39;ve tried. Don&amp;#39;t just post big blocks of code!&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Pay it forward!&lt;/strong&gt; Answer questions even if there is already an answer - multiple perspectives can be very helpful to beginners. Also there&amp;#39;s no quicker way to learn than &lt;a href="https://xkcd.com/386/"&gt;being wrong on the Internet&lt;/a&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Have a question regarding code / repository organization?&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s most likely answered within this &lt;a href="https://twitter.com/dan_abramov/status/1027245759232651270?lang=en"&gt;tweet&lt;/a&gt;.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;strong&gt;New to React?&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Check out the sub&amp;#39;s sidebar!&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;üÜì Here are great, &lt;strong&gt;free&lt;/strong&gt; resources! üÜì&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href="https://facebook.github.io/create-react-app/"&gt;Create React App&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href="https://reactjs.org/docs/getting-started.html"&gt;Read the &lt;strong&gt;official&lt;/strong&gt; Getting Started page&lt;/a&gt; on the docs.&lt;/li&gt;\n&lt;li&gt;&lt;a href="https://www.reddit.com/u/acemarke"&gt;/u/acemarke&lt;/a&gt;&amp;#39;s &lt;a href="http://blog.isquaredsoftware.com/2017/12/blogged-answers-learn-react/"&gt;suggested resources for learning React&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href="http://kcd.im/beginner-react"&gt;Kent Dodd&amp;#39;s Egghead.io course&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href="https://medium.freecodecamp.org/a-comprehensive-guide-to-react-js-in-2018-ba8bb6975597"&gt;Tyler McGinnis&amp;#39; 2018 Guide&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href="https://www.codecademy.com/catalog/language/javascript"&gt;Codecademy&amp;#39;s React courses&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href="https://scrimba.com/g/glearnreact"&gt;Scrimba&amp;#39;s React Course&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href="https://roadtoreact.com"&gt;Robin Wieruch&amp;#39;s Road to React&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;Any ideas/suggestions to improve this thread - feel free to comment here!&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;em&gt;Finally, an ongoing thank you to all who post questions and those who answer them. We&amp;#39;re a growing community and helping each other only strengthens it!&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
      likes: null,
      suggested_sort: 'new',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: false,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      all_awardings: [],
      media_only: false,
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: 'moderator',
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'ckpa1i',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'timmonsjg',
      num_crossposts: 0,
      num_comments: 84,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/ckpa1i/beginners_thread_easy_questions_august_2019/',
      parent_whitelist_status: 'all_ads',
      stickied: true,
      url:
        'https://www.reddit.com/r/reactjs/comments/ckpa1i/beginners_thread_easy_questions_august_2019/',
      subreddit_subscribers: 129260,
      created_utc: 1564670600,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext: '',
      author_fullname: 't2_2ya9z172',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title:
        'Twitch API Dashboard - A Fun, Extendable Beginner ReactJS Tutorial',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: null,
      downs: 0,
      thumbnail_height: 105,
      hide_score: false,
      name: 't3_cmcq55',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 245,
      total_awards_received: 0,
      media_embed: {
        content:
          '&lt;iframe width="600" height="338" src="https://www.youtube.com/embed/VTY6ZzDTV3A?feature=oembed&amp;enablejsapi=1" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;',
        width: 600,
        scrolling: false,
        height: 338,
      },
      thumbnail_width: 140,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: {
        type: 'youtube.com',
        oembed: {
          provider_url: 'https://www.youtube.com/',
          version: '1.0',
          title: 'ReactJS API Tutorial #1 - Make a Twitch Dashboard',
          type: 'video',
          thumbnail_width: 480,
          height: 338,
          width: 600,
          html:
            '&lt;iframe width="600" height="338" src="https://www.youtube.com/embed/VTY6ZzDTV3A?feature=oembed&amp;enablejsapi=1" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;',
          author_name: 'Renaissance Troll',
          provider_name: 'YouTube',
          thumbnail_url: 'https://i.ytimg.com/vi/VTY6ZzDTV3A/hqdefault.jpg',
          thumbnail_height: 360,
          author_url:
            'https://www.youtube.com/channel/UCzYV9nBadlQdBMPP2ZuDvKA',
        },
      },
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {
        content:
          '&lt;iframe width="600" height="338" src="https://www.youtube.com/embed/VTY6ZzDTV3A?feature=oembed&amp;enablejsapi=1" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;',
        width: 600,
        scrolling: false,
        media_domain_url: 'https://www.redditmedia.com/mediaembed/cmcq55',
        height: 338,
      },
      link_flair_text: null,
      can_mod_post: false,
      score: 245,
      approved_by: null,
      thumbnail:
        'https://a.thumbs.redditmedia.com/stFTqRDLe3EBfpL5FF34QPvmFrMjKtmuKTxFlFrh374.jpg',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      post_hint: 'rich:video',
      content_categories: null,
      is_self: false,
      mod_note: null,
      created: 1565049210,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'youtu.be',
      allow_live_comments: false,
      selftext_html: null,
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: false,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      preview: {
        images: [
          {
            source: {
              url:
                'https://external-preview.redd.it/tPC-1cXsqsEYpXEtwK4pQB-dhLbGerj84887BpOiQJs.jpg?auto=webp&amp;s=a68255d5747d92a16e9ad9dde10432e5055dae37',
              width: 480,
              height: 360,
            },
            resolutions: [
              {
                url:
                  'https://external-preview.redd.it/tPC-1cXsqsEYpXEtwK4pQB-dhLbGerj84887BpOiQJs.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=3525dbc2d93fa60f88c61dde43e8ef1dd21500f6',
                width: 108,
                height: 81,
              },
              {
                url:
                  'https://external-preview.redd.it/tPC-1cXsqsEYpXEtwK4pQB-dhLbGerj84887BpOiQJs.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f7166877889aab61a79f597b4ccaad5b2994d73b',
                width: 216,
                height: 162,
              },
              {
                url:
                  'https://external-preview.redd.it/tPC-1cXsqsEYpXEtwK4pQB-dhLbGerj84887BpOiQJs.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1332727b1f480a0c91d46995d2d3c3d5f6f86226',
                width: 320,
                height: 240,
              },
            ],
            variants: {},
            id: 'jr_nfLwn4xCF0AWYFn9m-TjAKN1C66vD5meEzK8lmqk',
          },
        ],
        enabled: false,
      },
      all_awardings: [],
      media_only: false,
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmcq55',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'renaissancetroll',
      num_crossposts: 1,
      num_comments: 15,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmcq55/twitch_api_dashboard_a_fun_extendable_beginner/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url: 'https://youtu.be/VTY6ZzDTV3A',
      subreddit_subscribers: 129260,
      created_utc: 1565020410,
      discussion_type: null,
      media: {
        type: 'youtube.com',
        oembed: {
          provider_url: 'https://www.youtube.com/',
          version: '1.0',
          title: 'ReactJS API Tutorial #1 - Make a Twitch Dashboard',
          type: 'video',
          thumbnail_width: 480,
          height: 338,
          width: 600,
          html:
            '&lt;iframe width="600" height="338" src="https://www.youtube.com/embed/VTY6ZzDTV3A?feature=oembed&amp;enablejsapi=1" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;',
          author_name: 'Renaissance Troll',
          provider_name: 'YouTube',
          thumbnail_url: 'https://i.ytimg.com/vi/VTY6ZzDTV3A/hqdefault.jpg',
          thumbnail_height: 360,
          author_url:
            'https://www.youtube.com/channel/UCzYV9nBadlQdBMPP2ZuDvKA',
        },
      },
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext: '',
      author_fullname: 't2_5ntjb',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title:
        'Introducing Storybook Design System, a reusable UI library for contributors (built in the open)',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: null,
      downs: 0,
      thumbnail_height: 95,
      hide_score: false,
      name: 't3_cmd0g1',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 56,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: 140,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: null,
      can_mod_post: false,
      score: 56,
      approved_by: null,
      thumbnail:
        'https://b.thumbs.redditmedia.com/PU6f9HKoVWKuk3r5CXV4oLxtCG34vka4-qkirTihkOs.jpg',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      post_hint: 'link',
      content_categories: null,
      is_self: false,
      mod_note: null,
      created: 1565050477,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'medium.com',
      allow_live_comments: false,
      selftext_html: null,
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: false,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      preview: {
        images: [
          {
            source: {
              url:
                'https://external-preview.redd.it/uBS-3UThRRN-JK7jrk6gS6SBwDfSN0MvAMrMX7uwsf0.jpg?auto=webp&amp;s=ef668033c7ec8bfe760d2936b79b44bcb17596d3',
              width: 1000,
              height: 680,
            },
            resolutions: [
              {
                url:
                  'https://external-preview.redd.it/uBS-3UThRRN-JK7jrk6gS6SBwDfSN0MvAMrMX7uwsf0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=63ab4b05e4efa99f144858426b302a54e196f4c2',
                width: 108,
                height: 73,
              },
              {
                url:
                  'https://external-preview.redd.it/uBS-3UThRRN-JK7jrk6gS6SBwDfSN0MvAMrMX7uwsf0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=33e8acfbe06f1b0670e73b129e2c40e645b96dda',
                width: 216,
                height: 146,
              },
              {
                url:
                  'https://external-preview.redd.it/uBS-3UThRRN-JK7jrk6gS6SBwDfSN0MvAMrMX7uwsf0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=86ccdee2299d18018661e2543aa6a35b49ea1624',
                width: 320,
                height: 217,
              },
              {
                url:
                  'https://external-preview.redd.it/uBS-3UThRRN-JK7jrk6gS6SBwDfSN0MvAMrMX7uwsf0.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=1b86f26495d7b5961f59f1c4cb579ffd170428e6',
                width: 640,
                height: 435,
              },
              {
                url:
                  'https://external-preview.redd.it/uBS-3UThRRN-JK7jrk6gS6SBwDfSN0MvAMrMX7uwsf0.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=c0bc61fb9b913405719c1d7f7cf9486398a957cb',
                width: 960,
                height: 652,
              },
            ],
            variants: {},
            id: '-R6pRd-nh_U3NrU01CS0BWz8niXDVu3nrQxj8qYkwvA',
          },
        ],
        enabled: false,
      },
      all_awardings: [],
      media_only: false,
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmd0g1',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'domyen',
      num_crossposts: 0,
      num_comments: 4,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmd0g1/introducing_storybook_design_system_a_reusable_ui/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url:
        'https://medium.com/storybookjs/introducing-storybook-design-system-23fd9b1ac3c0',
      subreddit_subscribers: 129260,
      created_utc: 1565021677,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext: '',
      author_fullname: 't2_1t7y74gw',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title: 'How Redux Connect compares to the new Redux Hooks.',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: 'link-flair-tutorial',
      downs: 0,
      thumbnail_height: 58,
      hide_score: false,
      name: 't3_cm8jxb',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 87,
      total_awards_received: 1,
      media_embed: {},
      thumbnail_width: 140,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: 'Tutorial',
      can_mod_post: false,
      score: 87,
      approved_by: null,
      thumbnail:
        'https://b.thumbs.redditmedia.com/WGp9wXCAIo08AlgHl4PBnaPIXqR6YFx4tWduf89I0Qc.jpg',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {
        gid_1: 1,
      },
      post_hint: 'link',
      content_categories: null,
      is_self: false,
      mod_note: null,
      created: 1565024294,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'medium.com',
      allow_live_comments: false,
      selftext_html: null,
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: false,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      preview: {
        images: [
          {
            source: {
              url:
                'https://external-preview.redd.it/tmEeOuYMte1L6rU-QhSy0gVhLf404OCsDuKMjBdBykE.jpg?auto=webp&amp;s=b883753f5c1b59ded9ab0da63d7799fec7604dcd',
              width: 952,
              height: 398,
            },
            resolutions: [
              {
                url:
                  'https://external-preview.redd.it/tmEeOuYMte1L6rU-QhSy0gVhLf404OCsDuKMjBdBykE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f189da117bfa245bceeacccf33296f90f7cd291c',
                width: 108,
                height: 45,
              },
              {
                url:
                  'https://external-preview.redd.it/tmEeOuYMte1L6rU-QhSy0gVhLf404OCsDuKMjBdBykE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=0ce2849d9b6b76c4022078a03907f942dfb5c745',
                width: 216,
                height: 90,
              },
              {
                url:
                  'https://external-preview.redd.it/tmEeOuYMte1L6rU-QhSy0gVhLf404OCsDuKMjBdBykE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e119f0d60b1952df41199431c6843385d9215e78',
                width: 320,
                height: 133,
              },
              {
                url:
                  'https://external-preview.redd.it/tmEeOuYMte1L6rU-QhSy0gVhLf404OCsDuKMjBdBykE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=853ec37d2e2f4e5681b3d0a3502410a9a769d9e8',
                width: 640,
                height: 267,
              },
            ],
            variants: {},
            id: 'pAA94_nyoWZdFPdv6SkD7gpy4Ppt3tQP3EJpjmBUENQ',
          },
        ],
        enabled: false,
      },
      all_awardings: [
        {
          is_enabled: true,
          count: 1,
          subreddit_id: null,
          description: "Shows the Silver Award on the post... and that's it.",
          coin_reward: 0,
          icon_width: 512,
          icon_url:
            'https://www.redditstatic.com/gold/awards/icon/silver_512.png',
          days_of_premium: 0,
          id: 'gid_1',
          icon_height: 512,
          resized_icons: [
            {
              url:
                'https://www.redditstatic.com/gold/awards/icon/silver_16.png',
              width: 16,
              height: 16,
            },
            {
              url:
                'https://www.redditstatic.com/gold/awards/icon/silver_32.png',
              width: 32,
              height: 32,
            },
            {
              url:
                'https://www.redditstatic.com/gold/awards/icon/silver_48.png',
              width: 48,
              height: 48,
            },
            {
              url:
                'https://www.redditstatic.com/gold/awards/icon/silver_64.png',
              width: 64,
              height: 64,
            },
            {
              url:
                'https://www.redditstatic.com/gold/awards/icon/silver_128.png',
              width: 128,
              height: 128,
            },
          ],
          days_of_drip_extension: 0,
          award_type: 'global',
          coin_price: 100,
          subreddit_coin_reward: 0,
          name: 'Silver',
        },
      ],
      media_only: false,
      link_flair_template_id: '16439f02-8522-11e8-8849-0e66852ea1ba',
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cm8jxb',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'jsloverr',
      num_crossposts: 0,
      num_comments: 28,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cm8jxb/how_redux_connect_compares_to_the_new_redux_hooks/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url: 'https://medium.com/p/b56134c650d2',
      subreddit_subscribers: 129260,
      created_utc: 1564995494,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext: '',
      author_fullname: 't2_7ogw5',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title: 'Image Processing - Making Custom Filters - React.js - Part 2',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: null,
      downs: 0,
      thumbnail_height: 57,
      hide_score: true,
      name: 't3_cmnoby',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 1,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: 140,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: null,
      can_mod_post: false,
      score: 1,
      approved_by: null,
      thumbnail:
        'https://b.thumbs.redditmedia.com/P3DQvB9nuyIJw13Nxn2IE1o0WXM-_aGv-G9hubmBvbw.jpg',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      post_hint: 'link',
      content_categories: null,
      is_self: false,
      mod_note: null,
      created: 1565106748,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'overflowjs.com',
      allow_live_comments: false,
      selftext_html: null,
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: true,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      preview: {
        images: [
          {
            source: {
              url:
                'https://external-preview.redd.it/qMOw4KeV-QaG3K5381LTmf7Ty45lpfav8YM4EuLpnYI.jpg?auto=webp&amp;s=72b67c2d08180f5c46bd9e21d69dd92c17a76e11',
              width: 2624,
              height: 1070,
            },
            resolutions: [
              {
                url:
                  'https://external-preview.redd.it/qMOw4KeV-QaG3K5381LTmf7Ty45lpfav8YM4EuLpnYI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e3277c2ec1134a954d0bf36ebef6aa63ec430b25',
                width: 108,
                height: 44,
              },
              {
                url:
                  'https://external-preview.redd.it/qMOw4KeV-QaG3K5381LTmf7Ty45lpfav8YM4EuLpnYI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a44476d47e1612ce03794246bd9e9a3244d02697',
                width: 216,
                height: 88,
              },
              {
                url:
                  'https://external-preview.redd.it/qMOw4KeV-QaG3K5381LTmf7Ty45lpfav8YM4EuLpnYI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=cf20efcf4bf9af1798ae40c6023640845d55ec50',
                width: 320,
                height: 130,
              },
              {
                url:
                  'https://external-preview.redd.it/qMOw4KeV-QaG3K5381LTmf7Ty45lpfav8YM4EuLpnYI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=4b52e2806d9138df565822e47d8e032f91e06aeb',
                width: 640,
                height: 260,
              },
              {
                url:
                  'https://external-preview.redd.it/qMOw4KeV-QaG3K5381LTmf7Ty45lpfav8YM4EuLpnYI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=42a03e5d617d4db435ca6fc572f0ef7a791da8a9',
                width: 960,
                height: 391,
              },
              {
                url:
                  'https://external-preview.redd.it/qMOw4KeV-QaG3K5381LTmf7Ty45lpfav8YM4EuLpnYI.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=ded09fe6ff89661276a20b3a1fa42b92ccd7d160',
                width: 1080,
                height: 440,
              },
            ],
            variants: {},
            id: 'URY4OS2QsbCqWOe_nNeiQWFvSA5EugcNzFNpMGy3Nk0',
          },
        ],
        enabled: false,
      },
      all_awardings: [],
      media_only: false,
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmnoby',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'pmz',
      num_crossposts: 0,
      num_comments: 0,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmnoby/image_processing_making_custom_filters_reactjs/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url:
        'https://overflowjs.com/posts/Image-Processing-Making-Custom-Filters-Reactjs-Part-2.html',
      subreddit_subscribers: 129260,
      created_utc: 1565077948,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext:
        "Hi! I'm trying to filter a user array that's displayed on a table based on the text field user input. The problem is the backspace key doesn't work properly. When you delete a letter from your search, it's removed from the search box, but it doesn't update the array. Does anybody know why?\n\n`const [userArray, setUserArray] = React.useState(myArray.users);`\n\n&amp;#x200B;\n\n`const handleInputChange = (event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; {const newFilteredArray = userArray.filter(user =&gt; {return user.email.toLowerCase().includes(event.target.value);});setUserArray(newFilteredArray);};`\n\n&amp;#x200B;\n\nAlso:\n\n`&lt;InputBaseplaceholder=\"Search\"classes={{root: classes.inputRoot,input: classes.inputInput,}}inputProps={{ 'aria-label': 'Search' }}onChange={props.handleInputChange}/&gt;`",
      author_fullname: 't2_3j69vdej',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title: "Backspace doens't work on text field (Material UI)",
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: 'link-flair-needs-help',
      downs: 0,
      thumbnail_height: null,
      hide_score: true,
      name: 't3_cmno35',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 1,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: null,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: 'Needs Help',
      can_mod_post: false,
      score: 1,
      approved_by: null,
      thumbnail: 'self',
      edited: 1565078674,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      content_categories: null,
      is_self: true,
      mod_note: null,
      created: 1565106694,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'self.reactjs',
      allow_live_comments: false,
      selftext_html:
        '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi! I&amp;#39;m trying to filter a user array that&amp;#39;s displayed on a table based on the text field user input. The problem is the backspace key doesn&amp;#39;t work properly. When you delete a letter from your search, it&amp;#39;s removed from the search box, but it doesn&amp;#39;t update the array. Does anybody know why?&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;const [userArray, setUserArray] = React.useState(myArray.users);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;const handleInputChange = (event: React.ChangeEvent&amp;lt;HTMLInputElement&amp;gt;) =&amp;gt; {const newFilteredArray = userArray.filter(user =&amp;gt; {return user.email.toLowerCase().includes(event.target.value);});setUserArray(newFilteredArray);};&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Also:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;&amp;lt;InputBaseplaceholder=&amp;quot;Search&amp;quot;classes={{root: classes.inputRoot,input: classes.inputInput,}}inputProps={{ &amp;#39;aria-label&amp;#39;: &amp;#39;Search&amp;#39; }}onChange={props.handleInputChange}/&amp;gt;&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: true,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      all_awardings: [],
      media_only: false,
      link_flair_template_id: 'c808a3ce-8520-11e8-b3d4-0e03aa55af0c',
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmno35',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'eatmypassword',
      num_crossposts: 0,
      num_comments: 0,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmno35/backspace_doenst_work_on_text_field_material_ui/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url:
        'https://www.reddit.com/r/reactjs/comments/cmno35/backspace_doenst_work_on_text_field_material_ui/',
      subreddit_subscribers: 129260,
      created_utc: 1565077894,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext:
        "I've broken my head trying to make an architecture like the one mentioned before. Do you have any code samples or ideas? Thanks, in advance",
      author_fullname: 't2_3jl4qqp8',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title: 'Next.js socket.io with React Context API',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: 'link-flair-needs-help',
      downs: 0,
      thumbnail_height: null,
      hide_score: true,
      name: 't3_cmn6d7',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 1,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: null,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: 'Needs Help',
      can_mod_post: false,
      score: 1,
      approved_by: null,
      thumbnail: 'self',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      content_categories: null,
      is_self: true,
      mod_note: null,
      created: 1565102916,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'self.reactjs',
      allow_live_comments: false,
      selftext_html:
        '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I&amp;#39;ve broken my head trying to make an architecture like the one mentioned before. Do you have any code samples or ideas? Thanks, in advance&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: true,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      all_awardings: [],
      media_only: false,
      link_flair_template_id: 'c808a3ce-8520-11e8-b3d4-0e03aa55af0c',
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmn6d7',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'Extra_Rule',
      num_crossposts: 0,
      num_comments: 4,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmn6d7/nextjs_socketio_with_react_context_api/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url:
        'https://www.reddit.com/r/reactjs/comments/cmn6d7/nextjs_socketio_with_react_context_api/',
      subreddit_subscribers: 129260,
      created_utc: 1565074116,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext:
        "Hey guys. I've never worked professionally with React before, but I studied it about 2 years ago.\n\nNow at my work, I see that we have the opportunity to migrate away from GWT. However, it's a 10-year-old project, and it requires a lot of planning.\n\nOne of the possible solutions is to migrate to ReactJS, and since my last contact with it, it seems that a bunch changed.\n\nI'm going to experiment with a small view of ours, but I'd like to see what's out there, and how other developers are working with it. I'm not sure this is adequate for this sub, and it's been a little hard to find people's opinion online.\n\n1. **Language**. There's TS, which is closer to GWT as it's statically typed. But I wonder I'll be able to do things more quickly if I can leverage the dynamic nature of JS. So, TS, Babel with latest ES, or this new Babel with TS combination that I didn't fully understand yet.\n2. **State management**. I've studied Redux in the past, but this application has the potential of being huge. I've read a little about MobX and Hooks. I can see that Hooks don't fully substitute Redux, but I'm not sure how I'm going to connect these. Which one are you using in your projects?\n3. **ESLint**. Because I'm building it from the ground up, I think it's crucial to have a strict linter. I read about Airbnb linter, but I'm unsure how it plays with TS. Which ESLint configurations do you use? I intend to use Prettier as well to avoid the formatting problems that we currently have.\n4. **Testing**. Do you test your components or just the logic in the Reducer? I feel like I don't have to test my components, but then I think there won't be enough coverage. How is your test setup?\n5. Is there something else that you find relevant and I missed here?\n\nIt's okay if we all diverge, I'm also reading a lot about these concerns I have, and I got the time to experiment with different combinations.\n\nWe won't change the Backend API to GraphQL. So that part is better covered, and I'll have to deal with the communication layer separately.\n\nI can also check online resources and even paid courses. I'm open to your suggestions.",
      author_fullname: 't2_iayghc7',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title: 'What is your ReactJS architecture?',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: null,
      downs: 0,
      thumbnail_height: null,
      hide_score: false,
      name: 't3_cmi7iw',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 3,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: null,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: null,
      can_mod_post: false,
      score: 3,
      approved_by: null,
      thumbnail: 'self',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      content_categories: null,
      is_self: true,
      mod_note: null,
      created: 1565073707,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'self.reactjs',
      allow_live_comments: false,
      selftext_html:
        '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey guys. I&amp;#39;ve never worked professionally with React before, but I studied it about 2 years ago.&lt;/p&gt;\n\n&lt;p&gt;Now at my work, I see that we have the opportunity to migrate away from GWT. However, it&amp;#39;s a 10-year-old project, and it requires a lot of planning.&lt;/p&gt;\n\n&lt;p&gt;One of the possible solutions is to migrate to ReactJS, and since my last contact with it, it seems that a bunch changed.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m going to experiment with a small view of ours, but I&amp;#39;d like to see what&amp;#39;s out there, and how other developers are working with it. I&amp;#39;m not sure this is adequate for this sub, and it&amp;#39;s been a little hard to find people&amp;#39;s opinion online.&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Language&lt;/strong&gt;. There&amp;#39;s TS, which is closer to GWT as it&amp;#39;s statically typed. But I wonder I&amp;#39;ll be able to do things more quickly if I can leverage the dynamic nature of JS. So, TS, Babel with latest ES, or this new Babel with TS combination that I didn&amp;#39;t fully understand yet.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;State management&lt;/strong&gt;. I&amp;#39;ve studied Redux in the past, but this application has the potential of being huge. I&amp;#39;ve read a little about MobX and Hooks. I can see that Hooks don&amp;#39;t fully substitute Redux, but I&amp;#39;m not sure how I&amp;#39;m going to connect these. Which one are you using in your projects?&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;ESLint&lt;/strong&gt;. Because I&amp;#39;m building it from the ground up, I think it&amp;#39;s crucial to have a strict linter. I read about Airbnb linter, but I&amp;#39;m unsure how it plays with TS. Which ESLint configurations do you use? I intend to use Prettier as well to avoid the formatting problems that we currently have.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Testing&lt;/strong&gt;. Do you test your components or just the logic in the Reducer? I feel like I don&amp;#39;t have to test my components, but then I think there won&amp;#39;t be enough coverage. How is your test setup?&lt;/li&gt;\n&lt;li&gt;Is there something else that you find relevant and I missed here?&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;It&amp;#39;s okay if we all diverge, I&amp;#39;m also reading a lot about these concerns I have, and I got the time to experiment with different combinations.&lt;/p&gt;\n\n&lt;p&gt;We won&amp;#39;t change the Backend API to GraphQL. So that part is better covered, and I&amp;#39;ll have to deal with the communication layer separately.&lt;/p&gt;\n\n&lt;p&gt;I can also check online resources and even paid courses. I&amp;#39;m open to your suggestions.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: true,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      all_awardings: [],
      media_only: false,
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmi7iw',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'r-guerreiro',
      num_crossposts: 0,
      num_comments: 9,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmi7iw/what_is_your_reactjs_architecture/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url:
        'https://www.reddit.com/r/reactjs/comments/cmi7iw/what_is_your_reactjs_architecture/',
      subreddit_subscribers: 129260,
      created_utc: 1565044907,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext:
        "So I was wondering what would be the best way to reuse react components that are used in multiple apps without having one copy for each. So that if I ever have to change the component I don't have to copy it back in every app.",
      author_fullname: 't2_1i3vyzj3',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title: 'How do you reuse react components from app to app?',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: null,
      downs: 0,
      thumbnail_height: null,
      hide_score: false,
      name: 't3_cmd3cl',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 10,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: null,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: null,
      can_mod_post: false,
      score: 10,
      approved_by: null,
      thumbnail: 'self',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      content_categories: null,
      is_self: true,
      mod_note: null,
      created: 1565050843,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'self.reactjs',
      allow_live_comments: false,
      selftext_html:
        '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;So I was wondering what would be the best way to reuse react components that are used in multiple apps without having one copy for each. So that if I ever have to change the component I don&amp;#39;t have to copy it back in every app.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: true,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      all_awardings: [],
      media_only: false,
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmd3cl',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'SouthwardTobias',
      num_crossposts: 0,
      num_comments: 13,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmd3cl/how_do_you_reuse_react_components_from_app_to_app/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url:
        'https://www.reddit.com/r/reactjs/comments/cmd3cl/how_do_you_reuse_react_components_from_app_to_app/',
      subreddit_subscribers: 129260,
      created_utc: 1565022043,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext:
        'Ok, I have a project in mind. \n\nI will create a webpage that will use a public and readily available API. In case you guys are wondering what it is, it is this API:  [https://docs.mhw-db.com/#introduction](https://docs.mhw-db.com/#introduction) \n\nAll about the game Monster Hunter World. There are many projects like this available but I want to create my own. This will serve as a practice for me to improve my WebDev skills and since I am interested in the project it will also fuel my enthusiasm to work on it.\n\nI have used react in some simple projects before, but just react as frontEnd and I am usually using Java Spring backend and I create my own API. API\'s that I have created are simple and small.\n\nA sample end-point that the API above have is  [https://mhw-db.com/armor](https://mhw-db.com/armor)  where it will return all armor in the game in json in this format: \n\n {"id":693,"name":"Empress Crown Beta","type":"head", ... etc}\n\n {"id":693,"name":"Empress  Mail  Beta","type":"chest", ... ect}\n\n {"id":693,"name":"Empress  Vambraces  Beta","type":"gloves", ... ect} \n\n...\n\n&amp;#x200B;\n\nSay on one dropdown box I want to group all head.\n\nOn the other I want to group all chest.\n\netc...\n\n&amp;#x200B;\n\nI am thinking in this manner:\n\n\\- componentDidMount of the outer container, load all the armor API, put in the state\n\n\\- inside componentDidMount call a function that will check all the available type there is.\n\n\\- Children of outerContainer are each dropdown boxes\n\n\\- dropdown box will accept props 1.) the state that is the json all armor, 2.) type, and 3.) onChangeOfArmorEventHandler() so that I can monitor the user\'s choice of armor.\n\n\\- Each componentDidMount of the children will do the filtering for themselves based on the prop.\n\nAfter accomplishing this, I will expand and create more component that will play around the base state from the "all armor" object.\n\nI am gonna start asking question before start doing this so please forgive me. \n\n1. What do you guys think of this? Am I missing something?\n2. I would like to practice my ReactJs skills and also would like to learn how to use Redux and what role does it play in the development with ReactJs. Do I need it here? Even if I don\'t need it, is there a way for me to use it here so I can explore Redux.\n3. I also don\'t know NodeJs yet, so same question with Redux, can I insert it somewhere here in this project?\n\nThat\'s all, I will start in around 8hrs from now. Soooo excited to work on this.\n\nThank you very much.',
      author_fullname: 't2_z889m',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title: 'Seeking advice on a Simple ReactJS project',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: null,
      downs: 0,
      thumbnail_height: null,
      hide_score: false,
      name: 't3_cmj098',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 2,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: null,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: null,
      can_mod_post: false,
      score: 2,
      approved_by: null,
      thumbnail: 'self',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      content_categories: null,
      is_self: true,
      mod_note: null,
      created: 1565077857,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'self.reactjs',
      allow_live_comments: false,
      selftext_html:
        '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Ok, I have a project in mind. &lt;/p&gt;\n\n&lt;p&gt;I will create a webpage that will use a public and readily available API. In case you guys are wondering what it is, it is this API:  &lt;a href="https://docs.mhw-db.com/#introduction"&gt;https://docs.mhw-db.com/#introduction&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;All about the game Monster Hunter World. There are many projects like this available but I want to create my own. This will serve as a practice for me to improve my WebDev skills and since I am interested in the project it will also fuel my enthusiasm to work on it.&lt;/p&gt;\n\n&lt;p&gt;I have used react in some simple projects before, but just react as frontEnd and I am usually using Java Spring backend and I create my own API. API&amp;#39;s that I have created are simple and small.&lt;/p&gt;\n\n&lt;p&gt;A sample end-point that the API above have is  &lt;a href="https://mhw-db.com/armor"&gt;https://mhw-db.com/armor&lt;/a&gt;  where it will return all armor in the game in json in this format: &lt;/p&gt;\n\n&lt;p&gt;{&amp;quot;id&amp;quot;:693,&amp;quot;name&amp;quot;:&amp;quot;Empress Crown Beta&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;head&amp;quot;, ... etc}&lt;/p&gt;\n\n&lt;p&gt;{&amp;quot;id&amp;quot;:693,&amp;quot;name&amp;quot;:&amp;quot;Empress  Mail  Beta&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;chest&amp;quot;, ... ect}&lt;/p&gt;\n\n&lt;p&gt;{&amp;quot;id&amp;quot;:693,&amp;quot;name&amp;quot;:&amp;quot;Empress  Vambraces  Beta&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;gloves&amp;quot;, ... ect} &lt;/p&gt;\n\n&lt;p&gt;...&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Say on one dropdown box I want to group all head.&lt;/p&gt;\n\n&lt;p&gt;On the other I want to group all chest.&lt;/p&gt;\n\n&lt;p&gt;etc...&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I am thinking in this manner:&lt;/p&gt;\n\n&lt;p&gt;- componentDidMount of the outer container, load all the armor API, put in the state&lt;/p&gt;\n\n&lt;p&gt;- inside componentDidMount call a function that will check all the available type there is.&lt;/p&gt;\n\n&lt;p&gt;- Children of outerContainer are each dropdown boxes&lt;/p&gt;\n\n&lt;p&gt;- dropdown box will accept props 1.) the state that is the json all armor, 2.) type, and 3.) onChangeOfArmorEventHandler() so that I can monitor the user&amp;#39;s choice of armor.&lt;/p&gt;\n\n&lt;p&gt;- Each componentDidMount of the children will do the filtering for themselves based on the prop.&lt;/p&gt;\n\n&lt;p&gt;After accomplishing this, I will expand and create more component that will play around the base state from the &amp;quot;all armor&amp;quot; object.&lt;/p&gt;\n\n&lt;p&gt;I am gonna start asking question before start doing this so please forgive me. &lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;What do you guys think of this? Am I missing something?&lt;/li&gt;\n&lt;li&gt;I would like to practice my ReactJs skills and also would like to learn how to use Redux and what role does it play in the development with ReactJs. Do I need it here? Even if I don&amp;#39;t need it, is there a way for me to use it here so I can explore Redux.&lt;/li&gt;\n&lt;li&gt;I also don&amp;#39;t know NodeJs yet, so same question with Redux, can I insert it somewhere here in this project?&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;That&amp;#39;s all, I will start in around 8hrs from now. Soooo excited to work on this.&lt;/p&gt;\n\n&lt;p&gt;Thank you very much.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: true,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      all_awardings: [],
      media_only: false,
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmj098',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'alvin07',
      num_crossposts: 0,
      num_comments: 0,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmj098/seeking_advice_on_a_simple_reactjs_project/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url:
        'https://www.reddit.com/r/reactjs/comments/cmj098/seeking_advice_on_a_simple_reactjs_project/',
      subreddit_subscribers: 129260,
      created_utc: 1565049057,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext: '',
      author_fullname: 't2_kyclp',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title: 'What is the difference between a Component and a PureComponent?',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: null,
      downs: 0,
      thumbnail_height: null,
      hide_score: false,
      name: 't3_cmh3og',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 3,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: null,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: null,
      can_mod_post: false,
      score: 3,
      approved_by: null,
      thumbnail: 'default',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      content_categories: null,
      is_self: false,
      mod_note: null,
      created: 1565068515,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'blog.lourenci.com',
      allow_live_comments: false,
      selftext_html: null,
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: false,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      all_awardings: [],
      media_only: false,
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmh3og',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'llourenci',
      num_crossposts: 0,
      num_comments: 2,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmh3og/what_is_the_difference_between_a_component_and_a/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url:
        'https://blog.lourenci.com/what-is-the-difference-between-a-component-and-a-purecomponent/?utm_source=reddit&amp;utm_medium=social&amp;utm_campaign=reactjs',
      subreddit_subscribers: 129260,
      created_utc: 1565039715,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext: '',
      author_fullname: 't2_2zqnshjs',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title:
        'Space Cloud: Build a realtime todo app without writing a single line of backend code!',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: 'link-flair-show',
      downs: 0,
      thumbnail_height: null,
      hide_score: false,
      name: 't3_cmipvx',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 2,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: null,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: 'Show /r/reactjs',
      can_mod_post: false,
      score: 2,
      approved_by: null,
      thumbnail: 'default',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      content_categories: null,
      is_self: false,
      mod_note: null,
      created: 1565076290,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'learn.spaceuptech.com',
      allow_live_comments: false,
      selftext_html: null,
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: false,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      all_awardings: [],
      media_only: false,
      link_flair_template_id: 'bd8d97ec-8520-11e8-9179-0e39e47dc3fc',
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmipvx',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'YourTechBud',
      num_crossposts: 0,
      num_comments: 0,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmipvx/space_cloud_build_a_realtime_todo_app_without/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url: 'https://learn.spaceuptech.com/frontend-course/react-basics/',
      subreddit_subscribers: 129260,
      created_utc: 1565047490,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext: '',
      author_fullname: 't2_4jiq7',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title:
        'An animated timeline built with React and D3 tutorial ‚Äì learn declarative transitions, data parsing, etc.',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: null,
      downs: 0,
      thumbnail_height: null,
      hide_score: false,
      name: 't3_cmdsmj',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 5,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: null,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: null,
      can_mod_post: false,
      score: 5,
      approved_by: null,
      thumbnail: 'default',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      content_categories: null,
      is_self: false,
      mod_note: null,
      created: 1565053939,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'reactfordataviz.com',
      allow_live_comments: false,
      selftext_html: null,
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: false,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      all_awardings: [],
      media_only: false,
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmdsmj',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'swizec',
      num_crossposts: 0,
      num_comments: 0,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmdsmj/an_animated_timeline_built_with_react_and_d3/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url: 'https://reactfordataviz.com/articles/newsletter-dataviz/',
      subreddit_subscribers: 129260,
      created_utc: 1565025139,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext: '',
      author_fullname: 't2_171vq7',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title:
        'I just built my own styled-component within 100 lines of code (only the main features, ofc)',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: null,
      downs: 0,
      thumbnail_height: 140,
      hide_score: false,
      name: 't3_cmd7mq',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 7,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: 140,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: null,
      can_mod_post: false,
      score: 7,
      approved_by: null,
      thumbnail:
        'https://b.thumbs.redditmedia.com/9Qcopat74tgpkHEQpYinEWbTIogqCTPY9A12ZIDGaho.jpg',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      post_hint: 'link',
      content_categories: null,
      is_self: false,
      mod_note: null,
      created: 1565051372,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'github.com',
      allow_live_comments: false,
      selftext_html: null,
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: false,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      preview: {
        images: [
          {
            source: {
              url:
                'https://external-preview.redd.it/BuAGLuPngSzmmImiv8711z8C17ZwVeqmSC78sNCUO2g.jpg?auto=webp&amp;s=b7808177d3e6cde57d5b2199042db56a88fe8f9c',
              width: 400,
              height: 400,
            },
            resolutions: [
              {
                url:
                  'https://external-preview.redd.it/BuAGLuPngSzmmImiv8711z8C17ZwVeqmSC78sNCUO2g.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b916b1e53aeb2fbbf9539fc3e39e04eabdc6254a',
                width: 108,
                height: 108,
              },
              {
                url:
                  'https://external-preview.redd.it/BuAGLuPngSzmmImiv8711z8C17ZwVeqmSC78sNCUO2g.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=5e5e4f88b1c0b3b75c8ed3680cbfe1be58e0568b',
                width: 216,
                height: 216,
              },
              {
                url:
                  'https://external-preview.redd.it/BuAGLuPngSzmmImiv8711z8C17ZwVeqmSC78sNCUO2g.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=374086fc4882a7985223f15f0b9d6bdce1bfb2d5',
                width: 320,
                height: 320,
              },
            ],
            variants: {},
            id: 'CUjXV7tYPNi9bQGjs0LT3yD8VymN19V4s2_7lp9XdGw',
          },
        ],
        enabled: false,
      },
      all_awardings: [],
      media_only: false,
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmd7mq',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'danilowoz',
      num_crossposts: 0,
      num_comments: 5,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmd7mq/i_just_built_my_own_styledcomponent_within_100/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url: 'https://github.com/danilowoz/my-styled-component',
      subreddit_subscribers: 129260,
      created_utc: 1565022572,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext: '',
      author_fullname: 't2_kcqtz',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title: 'New Redesign for React Native site launched today',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: null,
      downs: 0,
      thumbnail_height: 140,
      hide_score: false,
      name: 't3_cmap30',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 13,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: 140,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: null,
      can_mod_post: false,
      score: 13,
      approved_by: null,
      thumbnail:
        'https://b.thumbs.redditmedia.com/I3dZvI7PyPEYYXLfUBvjkEnUYogejfieD_zpke9A2Og.jpg',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      post_hint: 'link',
      content_categories: null,
      is_self: false,
      mod_note: null,
      created: 1565038919,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'github.com',
      allow_live_comments: false,
      selftext_html: null,
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: false,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      preview: {
        images: [
          {
            source: {
              url:
                'https://external-preview.redd.it/7zz8EiQYKifNt2Ljh9ukl_79rAb8Ht6ukYk7DWS3inA.jpg?auto=webp&amp;s=f680398e7963974ca0243b664917ac9952be3d5a',
              width: 400,
              height: 400,
            },
            resolutions: [
              {
                url:
                  'https://external-preview.redd.it/7zz8EiQYKifNt2Ljh9ukl_79rAb8Ht6ukYk7DWS3inA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=37c2c0153cd32a88568382d114cb65cee015284b',
                width: 108,
                height: 108,
              },
              {
                url:
                  'https://external-preview.redd.it/7zz8EiQYKifNt2Ljh9ukl_79rAb8Ht6ukYk7DWS3inA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d00b5d2870902fc94ba53b0d4fd13f417386d957',
                width: 216,
                height: 216,
              },
              {
                url:
                  'https://external-preview.redd.it/7zz8EiQYKifNt2Ljh9ukl_79rAb8Ht6ukYk7DWS3inA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=fdf76d779dfc79c842c98f44da755e0c5860751d',
                width: 320,
                height: 320,
              },
            ],
            variants: {},
            id: 'TSNP042Xulx8o04vL-EtljVjrl9Il3rg6hZjwvpza3E',
          },
        ],
        enabled: false,
      },
      all_awardings: [],
      media_only: false,
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmap30',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'swyx',
      num_crossposts: 0,
      num_comments: 0,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmap30/new_redesign_for_react_native_site_launched_today/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url: 'https://github.com/facebook/react-native-website/pull/1041',
      subreddit_subscribers: 129260,
      created_utc: 1565010119,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext:
        'I am building a crypto currency dashboard using React and Chart.js  (NOT react-chartjs-2) along with the crypto compare API.\n\nI have gotten the app to reflect the API data in the state by using setState on the API response but I cannot figure out how to get the chart to re-render/update once the new data is used in setState. I\'ve searched all over the internet and found that you can use the .update() method on the chart object but I have not been able to successfully do so.\n\nBelow is the code for my LineGraph component, I\'m hoping someone can help me out please :)\n\n&amp;#x200B;\n\n`import React, { Component } from "react";`  \n`import Chart from "chart.js";`  \n`export default class LineGraph extends Component {`  \n `constructor(props) {`  \n `super(props);`  \n `this.state = {`  \n `chartData: []`  \n`};`  \n  `}`  \n  `chart = React.createRef();`  \n `// Use this function to add new data to chart? Not sure how to implement`  \n `/* addData(chart, data) {`  \n`chart.data.datasets.forEach(dataset =&gt; {`  \n`dataset.data.push(data);`  \n`});`  \n`chart.update();`  \n  `} */`  \n `componentDidMount() {`  \n `const myChartRef = this.chart.current.getContext("2d");`  \n `const gradient = myChartRef.createLinearGradient(20, 500, 10, 20);`  \n`gradient.addColorStop(0, "#75C6FF");`  \n`gradient.addColorStop(1, "#3E0B80");`  \n `// Custom plugin to change chart area background color`  \n`Chart.pluginService.register({`  \n `beforeDraw: function(chart) {`  \n `if (`  \n`chart.config.options.chartArea &amp;&amp;`  \n`chart.config.options.chartArea.backgroundColor`  \n`) {`  \n `const ctx = chart.chart.ctx;`  \n `const chartArea = chart.chartArea;`  \n`ctx.save();`  \n`ctx.fillStyle = chart.config.options.chartArea.backgroundColor;`  \n`ctx.fillRect(`  \n`chartArea.left,`  \n`chartArea.top,`  \n`chartArea.right - chartArea.left,`  \n`chartArea.bottom - chartArea.top`  \n`);`  \n`ctx.restore();`  \n`}`  \n`}`  \n`});`  \n `new Chart(myChartRef, {`  \n `type: "line",`  \n `data: {`  \n `//Bring in data`  \n `labels: ["Jan", "Feb", "March"],`  \n `datasets: [`  \n`{`  \n `data: this.state.chartData,`  \n `backgroundColor: gradient,`  \n `pointBackgroundColor: "#fff",`  \n `pointBorderColor: gradient,`  \n `pointRadius: "5",`  \n `hoverBackgroundColor: "#75C6FF",`  \n `hoverBorderColor: gradient`  \n`}`  \n`]`  \n`},`  \n `options: {`  \n `responsive: true,`  \n `legend: {`  \n `display: false`  \n`},`  \n `scales: {`  \n `xAxes: [`  \n`{`  \n `gridLines: {`  \n `color: "#535356"`  \n`},`  \n `ticks: {`  \n `fontColor: "#87889C"`  \n`}`  \n`}`  \n`],`  \n `yAxes: [`  \n`{`  \n `gridLines: {`  \n `color: "#535356"`  \n`},`  \n `ticks: {`  \n `fontColor: "#87889C"`  \n`}`  \n`}`  \n`]`  \n`}`  \n`}`  \n`});`  \n `const getChartData = () =&gt; {`  \n `fetch(`  \n `"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH&amp;tsyms=USD"`  \n`)`  \n `.then(response =&gt; {`  \n `return response.json();`  \n`})`  \n `.then(myJson =&gt; {`  \n `const bitcoinPrice = myJson.BTC.USD;`  \n `this.setState({ chartData: bitcoinPrice });`  \n `console.log(JSON.stringify(myJson));`  \n`});`  \n`};`  \n `getChartData();`  \n  `}`  \n `render() {`  \n `return (`  \n `&lt;div&gt;`  \n`&lt;canvas id="myChart" ref={this.chart} /&gt;`  \n `&lt;/div&gt;`  \n`);`  \n  `}`  \n`}`',
      author_fullname: 't2_b7m2pv6',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title: 'Update chart upon state change. Using React and Chart.js',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: 'link-flair-needs-help',
      downs: 0,
      thumbnail_height: null,
      hide_score: false,
      name: 't3_cmhfcr',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 2,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: null,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: 'Needs Help',
      can_mod_post: false,
      score: 2,
      approved_by: null,
      thumbnail: 'self',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      content_categories: null,
      is_self: true,
      mod_note: null,
      created: 1565070000,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'self.reactjs',
      allow_live_comments: false,
      selftext_html:
        '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I am building a crypto currency dashboard using React and Chart.js  (NOT react-chartjs-2) along with the crypto compare API.&lt;/p&gt;\n\n&lt;p&gt;I have gotten the app to reflect the API data in the state by using setState on the API response but I cannot figure out how to get the chart to re-render/update once the new data is used in setState. I&amp;#39;ve searched all over the internet and found that you can use the .update() method on the chart object but I have not been able to successfully do so.&lt;/p&gt;\n\n&lt;p&gt;Below is the code for my LineGraph component, I&amp;#39;m hoping someone can help me out please :)&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;import React, { Component } from &amp;quot;react&amp;quot;;&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;import Chart from &amp;quot;chart.js&amp;quot;;&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;export default class LineGraph extends Component {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;constructor(props) {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;super(props);&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;this.state = {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;chartData: []&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;};&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;chart = React.createRef();&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;// Use this function to add new data to chart? Not sure how to implement&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;/* addData(chart, data) {&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;chart.data.datasets.forEach(dataset =&amp;gt; {&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;dataset.data.push(data);&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;});&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;chart.update();&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;} */&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;componentDidMount() {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;const myChartRef = this.chart.current.getContext(&amp;quot;2d&amp;quot;);&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;const gradient = myChartRef.createLinearGradient(20, 500, 10, 20);&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;gradient.addColorStop(0, &amp;quot;#75C6FF&amp;quot;);&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;gradient.addColorStop(1, &amp;quot;#3E0B80&amp;quot;);&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;// Custom plugin to change chart area background color&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Chart.pluginService.register({&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;beforeDraw: function(chart) {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;if (&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;chart.config.options.chartArea &amp;amp;&amp;amp;&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;chart.config.options.chartArea.backgroundColor&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;) {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;const ctx = chart.chart.ctx;&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;const chartArea = chart.chartArea;&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;ctx.save();&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;ctx.fillStyle = chart.config.options.chartArea.backgroundColor;&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;ctx.fillRect(&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;chartArea.left,&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;chartArea.top,&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;chartArea.right - chartArea.left,&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;chartArea.bottom - chartArea.top&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;);&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;ctx.restore();&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;});&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;new Chart(myChartRef, {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;type: &amp;quot;line&amp;quot;,&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;data: {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;//Bring in data&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;labels: [&amp;quot;Jan&amp;quot;, &amp;quot;Feb&amp;quot;, &amp;quot;March&amp;quot;],&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;datasets: [&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;{&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;data: this.state.chartData,&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;backgroundColor: gradient,&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;pointBackgroundColor: &amp;quot;#fff&amp;quot;,&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;pointBorderColor: gradient,&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;pointRadius: &amp;quot;5&amp;quot;,&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;hoverBackgroundColor: &amp;quot;#75C6FF&amp;quot;,&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;hoverBorderColor: gradient&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;]&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;},&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;options: {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;responsive: true,&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;legend: {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;display: false&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;},&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;scales: {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;xAxes: [&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;{&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;gridLines: {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;color: &amp;quot;#535356&amp;quot;&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;},&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;ticks: {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;fontColor: &amp;quot;#87889C&amp;quot;&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;],&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;yAxes: [&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;{&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;gridLines: {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;color: &amp;quot;#535356&amp;quot;&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;},&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;ticks: {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;fontColor: &amp;quot;#87889C&amp;quot;&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;]&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;});&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;const getChartData = () =&amp;gt; {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;fetch(&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;&amp;quot;https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH&amp;amp;tsyms=USD&amp;quot;&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;)&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;.then(response =&amp;gt; {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;return response.json();&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;})&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;.then(myJson =&amp;gt; {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;const bitcoinPrice = myJson.BTC.USD;&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;this.setState({ chartData: bitcoinPrice });&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;console.log(JSON.stringify(myJson));&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;});&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;};&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;getChartData();&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;render() {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;return (&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;&amp;lt;canvas id=&amp;quot;myChart&amp;quot; ref={this.chart} /&amp;gt;&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;);&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: true,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      all_awardings: [],
      media_only: false,
      link_flair_template_id: 'c808a3ce-8520-11e8-b3d4-0e03aa55af0c',
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmhfcr',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'BabblingDruid',
      num_crossposts: 0,
      num_comments: 1,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmhfcr/update_chart_upon_state_change_using_react_and/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url:
        'https://www.reddit.com/r/reactjs/comments/cmhfcr/update_chart_upon_state_change_using_react_and/',
      subreddit_subscribers: 129260,
      created_utc: 1565041200,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext:
        "Hey guys, long time lurker here who's looking for some advice.\n\nI've just finished my first Full-Stack application using the MERN stack. I'm rather proud of it, but would love an expert opinion as I honestly don't know if it's up to a good enough standard to utilise in a portfolio.\n\nThe site is for a mock company called VGX (Video Game eXchange), a potential rival to CeX, Cash Converters and other similar companies. It's an eCommerce site, that stocks Nintendo Switch, Playstation 4 and Xbox One, games, consoles and accessories.\n\nAny advise or criticism you can provide would be greatly appreciated.\n\nThank you in advance, and thank you to the whole community, you're a really helpful bunch!\n\n[Link to VGX](https://vgx-video-game-exchange.herokuapp.com/)\n\n[GitHub Link](https://github.com/JordanRhys/VGX)",
      author_fullname: 't2_2dygahrt',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title:
        'My first Full-Stack application, looking for opinions and constructive criticism',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: null,
      downs: 0,
      thumbnail_height: null,
      hide_score: false,
      name: 't3_cmb8yp',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 9,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: null,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: null,
      can_mod_post: false,
      score: 9,
      approved_by: null,
      thumbnail: 'self',
      edited: 1565020183,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      content_categories: null,
      is_self: true,
      mod_note: null,
      created: 1565041983,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'self.reactjs',
      allow_live_comments: false,
      selftext_html:
        '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey guys, long time lurker here who&amp;#39;s looking for some advice.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve just finished my first Full-Stack application using the MERN stack. I&amp;#39;m rather proud of it, but would love an expert opinion as I honestly don&amp;#39;t know if it&amp;#39;s up to a good enough standard to utilise in a portfolio.&lt;/p&gt;\n\n&lt;p&gt;The site is for a mock company called VGX (Video Game eXchange), a potential rival to CeX, Cash Converters and other similar companies. It&amp;#39;s an eCommerce site, that stocks Nintendo Switch, Playstation 4 and Xbox One, games, consoles and accessories.&lt;/p&gt;\n\n&lt;p&gt;Any advise or criticism you can provide would be greatly appreciated.&lt;/p&gt;\n\n&lt;p&gt;Thank you in advance, and thank you to the whole community, you&amp;#39;re a really helpful bunch!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href="https://vgx-video-game-exchange.herokuapp.com/"&gt;Link to VGX&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href="https://github.com/JordanRhys/VGX"&gt;GitHub Link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: true,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      all_awardings: [],
      media_only: false,
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmb8yp',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'JordanRhys94',
      num_crossposts: 0,
      num_comments: 10,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmb8yp/my_first_fullstack_application_looking_for/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url:
        'https://www.reddit.com/r/reactjs/comments/cmb8yp/my_first_fullstack_application_looking_for/',
      subreddit_subscribers: 129260,
      created_utc: 1565013183,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext: '',
      author_fullname: 't2_44im7wc3',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title:
        'Build your own unbeatable Tic Tac Toe with React Hooks and Styled Components',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: null,
      downs: 0,
      thumbnail_height: 114,
      hide_score: false,
      name: 't3_cmg2td',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 2,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: 140,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: null,
      can_mod_post: false,
      score: 2,
      approved_by: null,
      thumbnail:
        'https://b.thumbs.redditmedia.com/3RnQcCKSlPz_i4yQ1RN3GcH69fDZaJ43T8o1BYP3FOc.jpg',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      post_hint: 'link',
      content_categories: null,
      is_self: false,
      mod_note: null,
      created: 1565063948,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'claritydev.net',
      allow_live_comments: false,
      selftext_html: null,
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: true,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      preview: {
        images: [
          {
            source: {
              url:
                'https://external-preview.redd.it/R3x4C_Xk4toIhyCSDONj_ZcgtpSVaHhohxn_O5lSFPs.jpg?auto=webp&amp;s=46b3422f69e42ed0b8f2f28f63de4c7e41024cb3',
              width: 778,
              height: 639,
            },
            resolutions: [
              {
                url:
                  'https://external-preview.redd.it/R3x4C_Xk4toIhyCSDONj_ZcgtpSVaHhohxn_O5lSFPs.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=74cef95f1cf307c9c6d24e2a3a10599984052f66',
                width: 108,
                height: 88,
              },
              {
                url:
                  'https://external-preview.redd.it/R3x4C_Xk4toIhyCSDONj_ZcgtpSVaHhohxn_O5lSFPs.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2063b6c652dd792dda239b8506602457dd3a69b5',
                width: 216,
                height: 177,
              },
              {
                url:
                  'https://external-preview.redd.it/R3x4C_Xk4toIhyCSDONj_ZcgtpSVaHhohxn_O5lSFPs.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=13ea3cde3b055767d81de8ac545fb852b7f057b7',
                width: 320,
                height: 262,
              },
              {
                url:
                  'https://external-preview.redd.it/R3x4C_Xk4toIhyCSDONj_ZcgtpSVaHhohxn_O5lSFPs.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=4fb3d1defa4026fbbe2683fe49acf46bfef8237c',
                width: 640,
                height: 525,
              },
            ],
            variants: {},
            id: 'zy2G9r3N5aWDf8isJTrLqRkoxjdHSDptyTrVhx0_ydE',
          },
        ],
        enabled: false,
      },
      all_awardings: [],
      media_only: false,
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmg2td',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'Clarity_89',
      num_crossposts: 0,
      num_comments: 0,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmg2td/build_your_own_unbeatable_tic_tac_toe_with_react/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url:
        'https://claritydev.net/blog/making-tic-ta-toe-with-react-hooks-and-styled-comp',
      subreddit_subscribers: 129260,
      created_utc: 1565035148,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext:
        'Hello everyone, the video I spent 10+ hours on creating is finally done! It shows you how to build a **YouTube Clone Application in React.** This project is great because it covers a lot of topics that are always present in **reactjs** workflow, some of them are: project structure, destructuring, state management, passing props, API calls and more! üôÇ \n\nThe project is completely suitable for beginners and it makes a nice app to add to your **portfolio**. \n\nIf you have any questions, feel free to ask; and also, all feedback or critiques are welcome! :)\n\nLink to the video - [https://youtu.be/VPVzx1ZOVuw](https://youtu.be/VPVzx1ZOVuw).',
      author_fullname: 't2_2v0iufl9',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title: 'Build a YouTube Clone Application Using React',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: null,
      downs: 0,
      thumbnail_height: null,
      hide_score: false,
      name: 't3_clx9l0',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 290,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: null,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: null,
      can_mod_post: false,
      score: 290,
      approved_by: null,
      thumbnail: 'self',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      post_hint: 'self',
      content_categories: null,
      is_self: true,
      mod_note: null,
      created: 1564959804,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'self.reactjs',
      allow_live_comments: false,
      selftext_html:
        '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hello everyone, the video I spent 10+ hours on creating is finally done! It shows you how to build a &lt;strong&gt;YouTube Clone Application in React.&lt;/strong&gt; This project is great because it covers a lot of topics that are always present in &lt;strong&gt;reactjs&lt;/strong&gt; workflow, some of them are: project structure, destructuring, state management, passing props, API calls and more! üôÇ &lt;/p&gt;\n\n&lt;p&gt;The project is completely suitable for beginners and it makes a nice app to add to your &lt;strong&gt;portfolio&lt;/strong&gt;. &lt;/p&gt;\n\n&lt;p&gt;If you have any questions, feel free to ask; and also, all feedback or critiques are welcome! :)&lt;/p&gt;\n\n&lt;p&gt;Link to the video - &lt;a href="https://youtu.be/VPVzx1ZOVuw"&gt;https://youtu.be/VPVzx1ZOVuw&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: false,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      preview: {
        images: [
          {
            source: {
              url:
                'https://external-preview.redd.it/tFf8AXXpljk-UzHJJGmWRha_DIU7uc6Sz_Fj4keVsx8.jpg?auto=webp&amp;s=16f36098f3a451cdf0141e8e503160feec9773f4',
              width: 480,
              height: 360,
            },
            resolutions: [
              {
                url:
                  'https://external-preview.redd.it/tFf8AXXpljk-UzHJJGmWRha_DIU7uc6Sz_Fj4keVsx8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=826160c12be267a14eff70d153860fe5527d06ac',
                width: 108,
                height: 81,
              },
              {
                url:
                  'https://external-preview.redd.it/tFf8AXXpljk-UzHJJGmWRha_DIU7uc6Sz_Fj4keVsx8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a4b83b5131ad6e33c38a114786addc8649ccc7ad',
                width: 216,
                height: 162,
              },
              {
                url:
                  'https://external-preview.redd.it/tFf8AXXpljk-UzHJJGmWRha_DIU7uc6Sz_Fj4keVsx8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1d1556a408b47f55d885f048bac37fa266bb4bea',
                width: 320,
                height: 240,
              },
            ],
            variants: {},
            id: 'LKiGu0vdMnSwtaqpRd4dsO7ByB174SWNyB7Ej-Yc_QE',
          },
        ],
        enabled: false,
      },
      all_awardings: [],
      media_only: false,
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'clx9l0',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'HolidayInternet',
      num_crossposts: 2,
      num_comments: 47,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/clx9l0/build_a_youtube_clone_application_using_react/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url:
        'https://www.reddit.com/r/reactjs/comments/clx9l0/build_a_youtube_clone_application_using_react/',
      subreddit_subscribers: 129260,
      created_utc: 1564931004,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext:
        "I'm creating an app which allows the user to configure settings for a remote device, conceptually similar to a router config page. I'm using react-redux to store the various settings.\n\nLets consider the following config: `{profiles: [{name: 'foo'}, {name: 'bar'}], isEnabled: true}`  \nthe user can toggle the device on/off, add/remove profiles and rename them. Certain changes will be applied \"optimistically\" before http 200 whereas other settings might first show a spinner and only show the new value after http 200.  \nSince I want to support mobile devices and the possibility that the user might be on a slow/bad connection, I am wondering if there is a library that can help me with internally \"labeling\" the network state (pending/failed/success) for each update. Said label will be used to temporarily disable certain elements in the UI, display error messages, etc. This is important because the user might theoretically navigate from route A to route B during an XHR, but the app must still know that a change is pending and ultimately if the XHR was successful or not. If an XHR fails, the relevant setting rolls back to the previous value.\n\nThe UI must know the desired new config (the one the user inputs), but ultimately, the server is the source of truth and this is what I want to better communicate. Currently, I am have separate actions, such as `addProfilePending`, `addProfileSuccess`, `addProfileError`, etc, which I trigger manually with the fetch API. This works fine, but it's a rather bulky, impractical solution to do this every time.\n\nI have looked into redux-saga and redux-thunk, but unsure if these will help me streamline this. Ideas?",
      author_fullname: 't2_ctdlt',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title: 'Managing network state for async update of redux store',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: null,
      downs: 0,
      thumbnail_height: null,
      hide_score: false,
      name: 't3_cmbxzn',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 3,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: null,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: null,
      can_mod_post: false,
      score: 3,
      approved_by: null,
      thumbnail: 'self',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      content_categories: null,
      is_self: true,
      mod_note: null,
      created: 1565045520,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'self.reactjs',
      allow_live_comments: false,
      selftext_html:
        '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I&amp;#39;m creating an app which allows the user to configure settings for a remote device, conceptually similar to a router config page. I&amp;#39;m using react-redux to store the various settings.&lt;/p&gt;\n\n&lt;p&gt;Lets consider the following config: &lt;code&gt;{profiles: [{name: &amp;#39;foo&amp;#39;}, {name: &amp;#39;bar&amp;#39;}], isEnabled: true}&lt;/code&gt;&lt;br/&gt;\nthe user can toggle the device on/off, add/remove profiles and rename them. Certain changes will be applied &amp;quot;optimistically&amp;quot; before http 200 whereas other settings might first show a spinner and only show the new value after http 200.&lt;br/&gt;\nSince I want to support mobile devices and the possibility that the user might be on a slow/bad connection, I am wondering if there is a library that can help me with internally &amp;quot;labeling&amp;quot; the network state (pending/failed/success) for each update. Said label will be used to temporarily disable certain elements in the UI, display error messages, etc. This is important because the user might theoretically navigate from route A to route B during an XHR, but the app must still know that a change is pending and ultimately if the XHR was successful or not. If an XHR fails, the relevant setting rolls back to the previous value.&lt;/p&gt;\n\n&lt;p&gt;The UI must know the desired new config (the one the user inputs), but ultimately, the server is the source of truth and this is what I want to better communicate. Currently, I am have separate actions, such as &lt;code&gt;addProfilePending&lt;/code&gt;, &lt;code&gt;addProfileSuccess&lt;/code&gt;, &lt;code&gt;addProfileError&lt;/code&gt;, etc, which I trigger manually with the fetch API. This works fine, but it&amp;#39;s a rather bulky, impractical solution to do this every time.&lt;/p&gt;\n\n&lt;p&gt;I have looked into redux-saga and redux-thunk, but unsure if these will help me streamline this. Ideas?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: false,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      all_awardings: [],
      media_only: false,
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmbxzn',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'AnnoyingParrotTV',
      num_crossposts: 0,
      num_comments: 3,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmbxzn/managing_network_state_for_async_update_of_redux/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url:
        'https://www.reddit.com/r/reactjs/comments/cmbxzn/managing_network_state_for_async_update_of_redux/',
      subreddit_subscribers: 129260,
      created_utc: 1565016720,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext:
        'I‚Äôm not sure how to ask this, but I guess this is a start. \n\nRight now I have a application that currently is structured like this:\n\nApp.js\n\nRoute: login\n\nRoute: register\n\nRoute: main page\n\nThe main page is the only page with a header.\n\nA lot of selections happen on the main page and from there, I want to be able to load different routes inside a section of the main page.\n\nI basically want /main\n\nAnd then be able to load 6 different containers inside of the designated div. \n\nSo \n\n/main/sub1\n\n/main/sub2\n\nEtc. \n\nAgain. I want to not reload the main component, I just want to reload new containers on a specific div and have each one have its own route.\n\nDoes that make sense? \n\nThanks!!',
      author_fullname: 't2_fscmm',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title:
        'How do you load a component inside another component with routing?',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: null,
      downs: 0,
      thumbnail_height: null,
      hide_score: false,
      name: 't3_cmgqoe',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 1,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: null,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: null,
      can_mod_post: false,
      score: 1,
      approved_by: null,
      thumbnail: 'self',
      edited: 1565038366,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      content_categories: null,
      is_self: true,
      mod_note: null,
      created: 1565066902,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'self.reactjs',
      allow_live_comments: false,
      selftext_html:
        '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I‚Äôm not sure how to ask this, but I guess this is a start. &lt;/p&gt;\n\n&lt;p&gt;Right now I have a application that currently is structured like this:&lt;/p&gt;\n\n&lt;p&gt;App.js&lt;/p&gt;\n\n&lt;p&gt;Route: login&lt;/p&gt;\n\n&lt;p&gt;Route: register&lt;/p&gt;\n\n&lt;p&gt;Route: main page&lt;/p&gt;\n\n&lt;p&gt;The main page is the only page with a header.&lt;/p&gt;\n\n&lt;p&gt;A lot of selections happen on the main page and from there, I want to be able to load different routes inside a section of the main page.&lt;/p&gt;\n\n&lt;p&gt;I basically want /main&lt;/p&gt;\n\n&lt;p&gt;And then be able to load 6 different containers inside of the designated div. &lt;/p&gt;\n\n&lt;p&gt;So &lt;/p&gt;\n\n&lt;p&gt;/main/sub1&lt;/p&gt;\n\n&lt;p&gt;/main/sub2&lt;/p&gt;\n\n&lt;p&gt;Etc. &lt;/p&gt;\n\n&lt;p&gt;Again. I want to not reload the main component, I just want to reload new containers on a specific div and have each one have its own route.&lt;/p&gt;\n\n&lt;p&gt;Does that make sense? &lt;/p&gt;\n\n&lt;p&gt;Thanks!!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: true,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      all_awardings: [],
      media_only: false,
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmgqoe',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'Iprobablyjustlied',
      num_crossposts: 0,
      num_comments: 2,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmgqoe/how_do_you_load_a_component_inside_another/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url:
        'https://www.reddit.com/r/reactjs/comments/cmgqoe/how_do_you_load_a_component_inside_another/',
      subreddit_subscribers: 129260,
      created_utc: 1565038102,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext: '',
      author_fullname: 't2_2el3l5ig',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title: 'Reactjs How To Get Data From REST API',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: null,
      downs: 0,
      thumbnail_height: 105,
      hide_score: false,
      name: 't3_cmgp0a',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 1,
      total_awards_received: 0,
      media_embed: {
        content:
          '&lt;iframe width="600" height="338" src="https://www.youtube.com/embed/pPm2SttTLfU?feature=oembed&amp;enablejsapi=1" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;',
        width: 600,
        scrolling: false,
        height: 338,
      },
      thumbnail_width: 140,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: {
        oembed: {
          provider_url: 'https://www.youtube.com/',
          title: 'Reactjs How To Get Data From REST API',
          html:
            '&lt;iframe width="600" height="338" src="https://www.youtube.com/embed/pPm2SttTLfU?feature=oembed&amp;enablejsapi=1" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;',
          thumbnail_width: 480,
          height: 338,
          width: 600,
          version: '1.0',
          author_name: 'MT Software',
          provider_name: 'YouTube',
          thumbnail_url: 'https://i.ytimg.com/vi/pPm2SttTLfU/hqdefault.jpg',
          type: 'video',
          thumbnail_height: 360,
          author_url:
            'https://www.youtube.com/channel/UCFI-qu1msywPgN6jDgEM_ig',
        },
        type: 'youtube.com',
      },
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {
        content:
          '&lt;iframe width="600" height="338" src="https://www.youtube.com/embed/pPm2SttTLfU?feature=oembed&amp;enablejsapi=1" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;',
        width: 600,
        scrolling: false,
        media_domain_url: 'https://www.redditmedia.com/mediaembed/cmgp0a',
        height: 338,
      },
      link_flair_text: null,
      can_mod_post: false,
      score: 1,
      approved_by: null,
      thumbnail:
        'https://b.thumbs.redditmedia.com/PIzelG1XoUel-d3qCZTW3te7EHIE8QHm6wxTxO-HWog.jpg',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      post_hint: 'rich:video',
      content_categories: null,
      is_self: false,
      mod_note: null,
      created: 1565066697,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'youtube.com',
      allow_live_comments: false,
      selftext_html: null,
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: true,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      preview: {
        images: [
          {
            source: {
              url:
                'https://external-preview.redd.it/5pvoNeDyp1BpoASsDk-WhfMhy3wbCECXDmBklTuLMKE.jpg?auto=webp&amp;s=1d5fb06c3c3431ea0b1b78a590bff0c7a2d86d79',
              width: 480,
              height: 360,
            },
            resolutions: [
              {
                url:
                  'https://external-preview.redd.it/5pvoNeDyp1BpoASsDk-WhfMhy3wbCECXDmBklTuLMKE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a066c75d68939f1be15e7029d5dea14e285ad800',
                width: 108,
                height: 81,
              },
              {
                url:
                  'https://external-preview.redd.it/5pvoNeDyp1BpoASsDk-WhfMhy3wbCECXDmBklTuLMKE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=18be6692d57da0e2d22288199ffc600f6cb17aea',
                width: 216,
                height: 162,
              },
              {
                url:
                  'https://external-preview.redd.it/5pvoNeDyp1BpoASsDk-WhfMhy3wbCECXDmBklTuLMKE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e99f060ba6c0e46223c1ec92b98588b0f2300316',
                width: 320,
                height: 240,
              },
            ],
            variants: {},
            id: 'l3NsHuvAOtwcY6pWcR0ltwEVwo7l0sYKTgIdcCcgv-s',
          },
        ],
        enabled: false,
      },
      all_awardings: [],
      media_only: false,
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmgp0a',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'mtsoftawre',
      num_crossposts: 0,
      num_comments: 0,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmgp0a/reactjs_how_to_get_data_from_rest_api/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url: 'https://www.youtube.com/watch?v=pPm2SttTLfU',
      subreddit_subscribers: 129260,
      created_utc: 1565037897,
      discussion_type: null,
      media: {
        oembed: {
          provider_url: 'https://www.youtube.com/',
          title: 'Reactjs How To Get Data From REST API',
          html:
            '&lt;iframe width="600" height="338" src="https://www.youtube.com/embed/pPm2SttTLfU?feature=oembed&amp;enablejsapi=1" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;',
          thumbnail_width: 480,
          height: 338,
          width: 600,
          version: '1.0',
          author_name: 'MT Software',
          provider_name: 'YouTube',
          thumbnail_url: 'https://i.ytimg.com/vi/pPm2SttTLfU/hqdefault.jpg',
          type: 'video',
          thumbnail_height: 360,
          author_url:
            'https://www.youtube.com/channel/UCFI-qu1msywPgN6jDgEM_ig',
        },
        type: 'youtube.com',
      },
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext:
        "link here: [https://www.scronchit.com/](https://www.scronchit.com/)\n\nNew to webdev/coding in general.  I've had a lot of fun over the last few months learning react.  As the title states, this was my first major project.  This sub has been an excellent learning resource for me - just wanted to thank everyone for their knowledge and patience!\n\nFeatures:\n\n* Sort by gif/image\n* Create your own multi-reddit filters using the subreddit search function and the popular subreddit/category lists\n* Configurable autoplay\n* Sort by top/hot\n* Darkmode/lightmode\n* Browse with left/right arrow keys\n* NSFW mode\n\nCriticism/feedback is greatly appreciated!",
      author_fullname: 't2_4b2920ep',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title:
        'First Major Project - Reddit Grid Scroller - Filters posts by sub, content type, NSFW/SFW',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: null,
      downs: 0,
      thumbnail_height: null,
      hide_score: false,
      name: 't3_cmbjhk',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 2,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: null,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: null,
      can_mod_post: false,
      score: 2,
      approved_by: null,
      thumbnail: 'self',
      edited: 1565026997,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      content_categories: null,
      is_self: true,
      mod_note: null,
      created: 1565043501,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'self.reactjs',
      allow_live_comments: false,
      selftext_html:
        '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;link here: &lt;a href="https://www.scronchit.com/"&gt;https://www.scronchit.com/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;New to webdev/coding in general.  I&amp;#39;ve had a lot of fun over the last few months learning react.  As the title states, this was my first major project.  This sub has been an excellent learning resource for me - just wanted to thank everyone for their knowledge and patience!&lt;/p&gt;\n\n&lt;p&gt;Features:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Sort by gif/image&lt;/li&gt;\n&lt;li&gt;Create your own multi-reddit filters using the subreddit search function and the popular subreddit/category lists&lt;/li&gt;\n&lt;li&gt;Configurable autoplay&lt;/li&gt;\n&lt;li&gt;Sort by top/hot&lt;/li&gt;\n&lt;li&gt;Darkmode/lightmode&lt;/li&gt;\n&lt;li&gt;Browse with left/right arrow keys&lt;/li&gt;\n&lt;li&gt;NSFW mode&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Criticism/feedback is greatly appreciated!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: true,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      all_awardings: [],
      media_only: false,
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmbjhk',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'scronch666',
      num_crossposts: 0,
      num_comments: 0,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmbjhk/first_major_project_reddit_grid_scroller_filters/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url:
        'https://www.reddit.com/r/reactjs/comments/cmbjhk/first_major_project_reddit_grid_scroller_filters/',
      subreddit_subscribers: 129260,
      created_utc: 1565014701,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext:
        "Hey everyone,\n\nFirst off, thank you for taking a minute from your busy day to read this thread.\n\nI am sorry if the explanation is not very good and at this point of time I can't provide a code sample, but I will do my best to do so tomorrow early morning.\n\nBasically I am a junior web dev and a beginner react enthusiast. I am working on a task where I hate to display the following:\n\nA table with a row, that has four tds - name, relationship, a number and one more data.\n\nThey are populated from a select box that has 3 options - basically the product is a coverage plan that shows you different type of offer depending on your select.\n\nThe whole data is coming on page load from an object generated with php server-side on the template.\n\nI have build in the components but I am not sure how exactly to do the states and how to update the table.\n\nAny help will be much appreciated!\n\nThanks so much in advance!",
      author_fullname: 't2_12us7b',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title: 'Update a Table State from a Select Input',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: 'link-flair-needs-help',
      downs: 0,
      thumbnail_height: null,
      hide_score: false,
      name: 't3_cmffpf',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 1,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: null,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: 'Needs Help with states updates',
      can_mod_post: false,
      score: 1,
      approved_by: null,
      thumbnail: 'self',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      content_categories: null,
      is_self: true,
      mod_note: null,
      created: 1565061212,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'self.reactjs',
      allow_live_comments: false,
      selftext_html:
        '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey everyone,&lt;/p&gt;\n\n&lt;p&gt;First off, thank you for taking a minute from your busy day to read this thread.&lt;/p&gt;\n\n&lt;p&gt;I am sorry if the explanation is not very good and at this point of time I can&amp;#39;t provide a code sample, but I will do my best to do so tomorrow early morning.&lt;/p&gt;\n\n&lt;p&gt;Basically I am a junior web dev and a beginner react enthusiast. I am working on a task where I hate to display the following:&lt;/p&gt;\n\n&lt;p&gt;A table with a row, that has four tds - name, relationship, a number and one more data.&lt;/p&gt;\n\n&lt;p&gt;They are populated from a select box that has 3 options - basically the product is a coverage plan that shows you different type of offer depending on your select.&lt;/p&gt;\n\n&lt;p&gt;The whole data is coming on page load from an object generated with php server-side on the template.&lt;/p&gt;\n\n&lt;p&gt;I have build in the components but I am not sure how exactly to do the states and how to update the table.&lt;/p&gt;\n\n&lt;p&gt;Any help will be much appreciated!&lt;/p&gt;\n\n&lt;p&gt;Thanks so much in advance!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: true,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      all_awardings: [],
      media_only: false,
      link_flair_template_id: 'c808a3ce-8520-11e8-b3d4-0e03aa55af0c',
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmffpf',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'SssensationalVK',
      num_crossposts: 0,
      num_comments: 1,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmffpf/update_a_table_state_from_a_select_input/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url:
        'https://www.reddit.com/r/reactjs/comments/cmffpf/update_a_table_state_from_a_select_input/',
      subreddit_subscribers: 129260,
      created_utc: 1565032412,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext:
        "If I have a long function I know I need to refactor and do my best to follow the Single Responsibility Principle, but I'm curious how you guys go about doing so.  Please enlighten me on how you guys do this.  I'm trying to improve my code writing skills as we don't really have mentors where I work, so I have to do alot of self teaching.  So any suggestions or anything would be most helpful.  I would love to know any better ways of doing anything refactoring related.\n\n&amp;#x200B;\n\nIf i had a long function like:\n\n    // SomeComponent.js\n    function someFunc() {\n        if (something) {\n          doSomething1(params);\n          doSomething2(params);\n        }\n        else if (somethingElse) {\n          doSomethingElse(params);\n        else {\n          doMoreStuff(params);\n        }\n    }\n\nI've tried 3 different things.\n\n1. **Nested the Helper Functions**.\n\nI googled a bit of this and I can't find the post/article I read, but I remember there was a bit of argument whether nesting functions was a good idea, but I believe the conclusion was in JS it was okay to do so.  Feel free to englighten me.\n\n    // SomeComponent.js\n    function someFunc() {\n        if (something) {\n          _doSomething1(params);\n          _doSomething2(params);\n        }\n        else if (somethingElse) {\n          _doSomethingElse(params);\n        else {\n          _doMoreStuff(params);\n        }\n      \n      function _doSomething1(params) {...}\n      function _doSomething2(params) {...}\n      function _doSomethingElse(params) {...} // etc etc\n    }\n\n2) **Put the functions in a different Helper file**\n\n    // SomeComponent.js\n    import { doSomething1, doSomething2, doSomethingElse } from SomeComponentHelper.js\n    function someFunc() {\n        if (something) {\n          doSomething1(params);\n          doSomething2(params);\n        }\n        else if (somethingElse) {\n          doSomethingElse(params);\n        else {\n          doMoreStuff(params);\n        }\n    }\n    \n    // SomeComponentHelper.js\n    function doSomething1(params) {...}\n    function doSomething2(params) {...}\n    function doSomethingElse(params) {...} // etc etc\n\n3) **Put everything in the Component File**\n\n    // SomeComponent.js\n    function someFunc() {\n        if (something) {\n          _doSomething1(params);\n          _doSomething2(params);\n        }\n        else if (somethingElse) {\n          _doSomethingElse(params);\n        else {\n          _doMoreStuff(params);\n        }\n    }\n    \n    function _doSomething1(params) {...}\n    function _doSomething2(params) {...}\n    function _doSomethingElse(params) {...} // etc etc",
      author_fullname: 't2_9q4wb',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title:
        'How do you organize refactoring long functions for Single Responsibility Principle?',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: null,
      downs: 0,
      thumbnail_height: null,
      hide_score: false,
      name: 't3_cmfa9a',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: null,
      subreddit_type: 'public',
      ups: 1,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: null,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: null,
      can_mod_post: false,
      score: 1,
      approved_by: null,
      thumbnail: 'self',
      edited: 1565032246,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      content_categories: null,
      is_self: true,
      mod_note: null,
      created: 1565060543,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'self.reactjs',
      allow_live_comments: false,
      selftext_html:
        '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;If I have a long function I know I need to refactor and do my best to follow the Single Responsibility Principle, but I&amp;#39;m curious how you guys go about doing so.  Please enlighten me on how you guys do this.  I&amp;#39;m trying to improve my code writing skills as we don&amp;#39;t really have mentors where I work, so I have to do alot of self teaching.  So any suggestions or anything would be most helpful.  I would love to know any better ways of doing anything refactoring related.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;If i had a long function like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// SomeComponent.js\nfunction someFunc() {\n    if (something) {\n      doSomething1(params);\n      doSomething2(params);\n    }\n    else if (somethingElse) {\n      doSomethingElse(params);\n    else {\n      doMoreStuff(params);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;ve tried 3 different things.&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Nested the Helper Functions&lt;/strong&gt;.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;I googled a bit of this and I can&amp;#39;t find the post/article I read, but I remember there was a bit of argument whether nesting functions was a good idea, but I believe the conclusion was in JS it was okay to do so.  Feel free to englighten me.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// SomeComponent.js\nfunction someFunc() {\n    if (something) {\n      _doSomething1(params);\n      _doSomething2(params);\n    }\n    else if (somethingElse) {\n      _doSomethingElse(params);\n    else {\n      _doMoreStuff(params);\n    }\n\n  function _doSomething1(params) {...}\n  function _doSomething2(params) {...}\n  function _doSomethingElse(params) {...} // etc etc\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;2) &lt;strong&gt;Put the functions in a different Helper file&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// SomeComponent.js\nimport { doSomething1, doSomething2, doSomethingElse } from SomeComponentHelper.js\nfunction someFunc() {\n    if (something) {\n      doSomething1(params);\n      doSomething2(params);\n    }\n    else if (somethingElse) {\n      doSomethingElse(params);\n    else {\n      doMoreStuff(params);\n    }\n}\n\n// SomeComponentHelper.js\nfunction doSomething1(params) {...}\nfunction doSomething2(params) {...}\nfunction doSomethingElse(params) {...} // etc etc\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;3) &lt;strong&gt;Put everything in the Component File&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// SomeComponent.js\nfunction someFunc() {\n    if (something) {\n      _doSomething1(params);\n      _doSomething2(params);\n    }\n    else if (somethingElse) {\n      _doSomethingElse(params);\n    else {\n      _doMoreStuff(params);\n    }\n}\n\nfunction _doSomething1(params) {...}\nfunction _doSomething2(params) {...}\nfunction _doSomethingElse(params) {...} // etc etc\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: true,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      all_awardings: [],
      media_only: false,
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: null,
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'cmfa9a',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'cloudk1cker',
      num_crossposts: 0,
      num_comments: 3,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: null,
      permalink:
        '/r/reactjs/comments/cmfa9a/how_do_you_organize_refactoring_long_functions/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url:
        'https://www.reddit.com/r/reactjs/comments/cmfa9a/how_do_you_organize_refactoring_long_functions/',
      subreddit_subscribers: 129260,
      created_utc: 1565031743,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
  {
    kind: 't3',
    data: {
      approved_at_utc: null,
      subreddit: 'reactjs',
      selftext: '',
      author_fullname: 't2_7enqh',
      saved: false,
      mod_reason_title: null,
      gilded: 0,
      clicked: false,
      title: 'How Does the Development Mode Work?',
      link_flair_richtext: [],
      subreddit_name_prefixed: 'r/reactjs',
      hidden: false,
      pwls: 6,
      link_flair_css_class: 'link-flair-weekend-reads',
      downs: 0,
      thumbnail_height: 140,
      hide_score: false,
      name: 't3_clyuaw',
      quarantine: false,
      link_flair_text_color: 'dark',
      author_flair_background_color: '',
      subreddit_type: 'public',
      ups: 95,
      total_awards_received: 0,
      media_embed: {},
      thumbnail_width: 140,
      author_flair_template_id: null,
      is_original_content: false,
      user_reports: [],
      secure_media: null,
      is_reddit_media_domain: false,
      is_meta: false,
      category: null,
      secure_media_embed: {},
      link_flair_text: 'Weekend Reads',
      can_mod_post: false,
      score: 95,
      approved_by: null,
      thumbnail:
        'https://a.thumbs.redditmedia.com/La7s9ySxmlzWVGdIK4filqG2eRdnIe1OTyXsSQEigt0.jpg',
      edited: false,
      author_flair_css_class: null,
      author_flair_richtext: [],
      gildings: {},
      post_hint: 'link',
      content_categories: null,
      is_self: false,
      mod_note: null,
      created: 1564967836,
      link_flair_type: 'text',
      wls: 6,
      banned_by: null,
      author_flair_type: 'text',
      domain: 'overreacted.io',
      allow_live_comments: false,
      selftext_html: null,
      likes: null,
      suggested_sort: 'confidence',
      banned_at_utc: null,
      view_count: null,
      archived: false,
      no_follow: false,
      is_crosspostable: false,
      pinned: false,
      over_18: false,
      preview: {
        images: [
          {
            source: {
              url:
                'https://external-preview.redd.it/7M5l13wfBHpjp4Dg54yvNI331u-vnfXgW-zNWH17t1o.jpg?auto=webp&amp;s=a4d7b5ebb6c6f97e242910d8e9ebec5537b2c729',
              width: 460,
              height: 460,
            },
            resolutions: [
              {
                url:
                  'https://external-preview.redd.it/7M5l13wfBHpjp4Dg54yvNI331u-vnfXgW-zNWH17t1o.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=83ae04e9b9dc2b598001c908d0a87a088492fe5d',
                width: 108,
                height: 108,
              },
              {
                url:
                  'https://external-preview.redd.it/7M5l13wfBHpjp4Dg54yvNI331u-vnfXgW-zNWH17t1o.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2f729fcd9eb664de13cb8be18154a3e2f79a16e7',
                width: 216,
                height: 216,
              },
              {
                url:
                  'https://external-preview.redd.it/7M5l13wfBHpjp4Dg54yvNI331u-vnfXgW-zNWH17t1o.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=b3f2dfa5bebe43d75fff0884ba2d7af246a0824e',
                width: 320,
                height: 320,
              },
            ],
            variants: {},
            id: '7JzBssFZz-yzL4r1CCsr5_K8aGc_XZh-O9Iiku_ARSM',
          },
        ],
        enabled: false,
      },
      all_awardings: [],
      media_only: false,
      link_flair_template_id: 'a4bc860a-c4b4-11e8-8d40-0e3e68db0744',
      can_gild: false,
      spoiler: false,
      locked: false,
      author_flair_text: 'React core team',
      visited: false,
      num_reports: null,
      distinguished: null,
      subreddit_id: 't5_2zldd',
      mod_reason_by: null,
      removal_reason: null,
      link_flair_background_color: '',
      id: 'clyuaw',
      is_robot_indexable: true,
      report_reasons: null,
      author: 'gaearon',
      num_crossposts: 0,
      num_comments: 4,
      send_replies: true,
      whitelist_status: 'all_ads',
      contest_mode: false,
      mod_reports: [],
      author_patreon_flair: false,
      author_flair_text_color: 'dark',
      permalink:
        '/r/reactjs/comments/clyuaw/how_does_the_development_mode_work/',
      parent_whitelist_status: 'all_ads',
      stickied: false,
      url: 'https://overreacted.io/how-does-the-development-mode-work/',
      subreddit_subscribers: 129260,
      created_utc: 1564939036,
      discussion_type: null,
      media: null,
      is_video: false,
    },
  },
];
